* 顾比操作系统

  根据顾比均线，我们可以以此为依据选择股票的短期入场点和离场点。

** 顾比的进场线

   在顾比的系统中，通过顾比均线系统，可以用于发现趋势的转化，而在转化的过程中，如何寻找入场信号，就是进场线发挥作用的地方：

   #+BEGIN_QUOTE
   通过顾比复合均线关系或直边趋势线突破知道即将有这种信号发出。顾比倒数线确认了我们已知的信息。当趋势持续下跌的时候，我们从每一个价格新低重新计算倒数线。
   #+END_QUOTE

   在原理上，从最近的 *最低点* 开始分析。这个点是计算顾比倒数线的 *基线* K线A。以K线A的最高价为基础，向前（上一周期以往），可以找到第一根K线的最高价高于K线A的最高价的。这根K线就是 *重要K线B* 。 以重要K线B的最高价为准继续向前查找，又可以找到一条K线的最高价高于K线B的最高价。这根K线就是 *重要K线C* 。

   以 *重要K线C* 的最高价为准，向右（下一周期方向）划一条线。这条线就是顾比倒数线。

   注意，在顾比倒数线的计算过程中，使用的一直是 *最高价* ，而不是使用收盘价。

   当股票的有效价格（收盘价）有效突破顾比倒数线指示的位置时，即可认为出现了入场信号。可以考虑买入了。

** 顾比的离场线（止损线）

   顾比倒数线的应用还可以应用于进场后的止损。当应用于止损的时候，反向应用绘制顾比倒数线的方法，即 *以最低价为准* 进行重要K线的判断。

   具体方法如下：

   在原理上，从最近的 *最高点* 开始分析。这个点是计算顾比倒数线的 *基线* K线A。以K线A的最低价为基础，向前（上一周期以往），可以找到第一根K线的最低价低于K线A的最低价的。这根K线就是 *重要K线B* 。 以重要K线B的最低价为准继续向前查找，又可以找到一条K线的最低价低于K线B的最低价。这根K线就是 *重要K线C* 。

   以 *重要K线C* 的最低价为准，向右（下一周期方向）划一条线。这条线就是 *顾比倒数止损线* 。

   上面的计算方法看起来和计算顾比倒数线十分相似，关键就在于 *反向运算* 。


   在交易师的图线绘制过程中，我理解是从左向右绘制的。而且每一条绘图指令会单独进入循环，完成整个图线的绘制过程。

* 源代码

  设置代码为“主图叠加”的绘制方式。同时设置顾比倒数线在主图中的显示模式（与主图K线画法相同）。
  
  #+BEGIN_SRC text :tangle yes
    #MainChart
    KLINE(O,H,L,C,0);
  #+END_SRC
  
  开始进行顾比入场线的计算。使用单独的变量记录日最高价，方便在循环中使用。

  #+BEGIN_SRC text :tangle yes
    VARIABLE: hh:=High;//定义数组型变量hh为每日的最高价
  #+END_SRC

  在交易师软件中，当前周期使用数组下标 ~0~ 表示。最老的一个周期的数组下标由系统常数 ~DataCount~ 表示。因此最老的一根K线的数组下标应该是 ~DataCount-1~ 。

  下面的循环中，针对历史上的没一条K线，我们都当作 *重要K线A* 寻找重要K线B和C。在后续画线过程中再确定是否需要启用。

  #+BEGIN_SRC text :tangle yes
    for i=0 to DataCount-1 do//i从0到最后一天（最早的一天）作循环计算
    begin
            for j=i to DataCount-1 do//j从1到i-1作循环计算
            begin
                    if hh[i]<hh[j] then break;//如果第i天的最高价低于i-j天的最高价，则跳出此次循环，j值赋给本日的gd
            end
            gd[i]:=j-i;//第二条K线的与当前周期的位置
            
            for k=j to DataCount-1 Do
            Begin
                    if hh[j]<hh[k] Then break;
            End
            gbG[i]:=k-i;//第三根重要蜡烛线到i的天数
    end
  #+END_SRC

  绘制入场线（RCX：入场线的拼音首字母）。绘制过程中，使用LlvBars查找当前周期是否为短期内的最低价。如果是，则该周期为顾比重要K线A。如果不是，那么就忽略该K线。

  如果计算得到的入场价格向后持续了两个周期以上，那么在当前周期位置做标记，说明计算该价格的基础K线就（重要K线A）。

  #+BEGIN_SRC text :tangle yes
    RCX:ValueWhen(LlvBars(Low,gbG+1)=0,ref(High,gbG)),ColorRed;
    DrawIcon(LlvBars(Low,gbG+1)=0 And RCX=RefX(RCX,1), Low, 4); 
  #+END_SRC

  按照上面的方法计算和绘制止损线。

  #+BEGIN_SRC text :tangle yes
    VARIABLE: ll:=Low;//定义数组型变量hh为每日的最高价
    for i=0 to DataCount-1 do//i从0到最后一天（最早的一天）作循环计算
    begin
            for j=i to DataCount-1 do
            begin
                    if ll[i]>ll[j] then break;
            end
            gld[i]:=j-i;
            
            for k=j to DataCount-1 Do
            Begin
                    if ll[j]>ll[k] Then break;
            End
            glbG[i]:=k-i;
    end
    CCX:ValueWhen(hhvBars(High,glbG+1)=0,ref(Low,glbG)),ColorGreen;
    DrawIcon(HhvBars(High,glbG+1)=0 And CCX=RefX(CCX,1), High, 5),Pxup13, ColorGreen; 
  #+END_SRC
